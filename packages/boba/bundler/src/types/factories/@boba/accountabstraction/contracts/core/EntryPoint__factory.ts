/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  EntryPoint,
  EntryPointInterface,
} from "../../../../../@boba/accountabstraction/contracts/core/EntryPoint";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "opIndex",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "paymaster",
        type: "address",
      },
      {
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "FailedOp",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "SenderAddressResult",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "aggregator",
        type: "address",
      },
    ],
    name: "SignatureValidationFailed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "preOpGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "prefund",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "paymasterStake",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "paymasterUnstakeDelay",
            type: "uint256",
          },
        ],
        internalType: "struct IEntryPoint.PaymasterInfo",
        name: "paymasterInfo",
        type: "tuple",
      },
    ],
    name: "SimulationResult",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "preOpGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "prefund",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "paymasterStake",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "paymasterUnstakeDelay",
            type: "uint256",
          },
        ],
        internalType: "struct IEntryPoint.PaymasterInfo",
        name: "paymasterInfo",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "actualAggregator",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "aggregatorStake",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "aggregatorUnstakeDelay",
            type: "uint256",
          },
        ],
        internalType: "struct IEntryPoint.AggregationInfo",
        name: "aggregationInfo",
        type: "tuple",
      },
    ],
    name: "SimulationResultWithAggregation",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalDeposit",
        type: "uint256",
      },
    ],
    name: "Deposited",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalStaked",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "withdrawTime",
        type: "uint256",
      },
    ],
    name: "StakeLocked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "withdrawTime",
        type: "uint256",
      },
    ],
    name: "StakeUnlocked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "withdrawAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "StakeWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "paymaster",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "actualGasCost",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "actualGasPrice",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    name: "UserOperationEvent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "revertReason",
        type: "bytes",
      },
    ],
    name: "UserOperationRevertReason",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "withdrawAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_unstakeDelaySec",
        type: "uint32",
      },
    ],
    name: "addStake",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "depositTo",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "deposits",
    outputs: [
      {
        internalType: "uint112",
        name: "deposit",
        type: "uint112",
      },
      {
        internalType: "bool",
        name: "staked",
        type: "bool",
      },
      {
        internalType: "uint112",
        name: "stake",
        type: "uint112",
      },
      {
        internalType: "uint32",
        name: "unstakeDelaySec",
        type: "uint32",
      },
      {
        internalType: "uint64",
        name: "withdrawTime",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getDepositInfo",
    outputs: [
      {
        components: [
          {
            internalType: "uint112",
            name: "deposit",
            type: "uint112",
          },
          {
            internalType: "bool",
            name: "staked",
            type: "bool",
          },
          {
            internalType: "uint112",
            name: "stake",
            type: "uint112",
          },
          {
            internalType: "uint32",
            name: "unstakeDelaySec",
            type: "uint32",
          },
          {
            internalType: "uint64",
            name: "withdrawTime",
            type: "uint64",
          },
        ],
        internalType: "struct IStakeManager.DepositInfo",
        name: "info",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "initCode",
        type: "bytes",
      },
    ],
    name: "getSenderAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
    ],
    name: "getUserOpHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "sender",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "nonce",
                type: "uint256",
              },
              {
                internalType: "bytes",
                name: "initCode",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "callData",
                type: "bytes",
              },
              {
                internalType: "uint256",
                name: "callGasLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "verificationGasLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "preVerificationGas",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "maxFeePerGas",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "maxPriorityFeePerGas",
                type: "uint256",
              },
              {
                internalType: "bytes",
                name: "paymasterAndData",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "signature",
                type: "bytes",
              },
            ],
            internalType: "struct UserOperation[]",
            name: "userOps",
            type: "tuple[]",
          },
          {
            internalType: "contract IAggregator",
            name: "aggregator",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct IEntryPoint.UserOpsPerAggregator[]",
        name: "opsPerAggregator",
        type: "tuple[]",
      },
      {
        internalType: "address payable",
        name: "beneficiary",
        type: "address",
      },
    ],
    name: "handleAggregatedOps",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation[]",
        name: "ops",
        type: "tuple[]",
      },
      {
        internalType: "address payable",
        name: "beneficiary",
        type: "address",
      },
    ],
    name: "handleOps",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "callData",
        type: "bytes",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "sender",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "nonce",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "callGasLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "verificationGasLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "preVerificationGas",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "paymaster",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "maxFeePerGas",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "maxPriorityFeePerGas",
                type: "uint256",
              },
            ],
            internalType: "struct EntryPoint.MemoryUserOp",
            name: "mUserOp",
            type: "tuple",
          },
          {
            internalType: "bytes32",
            name: "userOpHash",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "prefund",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "contextOffset",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preOpGas",
            type: "uint256",
          },
        ],
        internalType: "struct EntryPoint.UserOpInfo",
        name: "opInfo",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "context",
        type: "bytes",
      },
    ],
    name: "innerHandleOp",
    outputs: [
      {
        internalType: "uint256",
        name: "actualGasCost",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
    ],
    name: "simulateValidation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unlockStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
    ],
    name: "withdrawStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "withdrawAmount",
        type: "uint256",
      },
    ],
    name: "withdrawTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60a0604052604051620000129062000050565b604051809103906000f0801580156200002f573d6000803e3d6000fd5b506001600160a01b03166080523480156200004957600080fd5b506200005e565b610213806200312683390190565b6080516130a56200008160003960008181610e7d015261225501526130a56000f3fe6080604052600436106100e15760003560e01c80639b249f691161007f578063bb9fe6bf11610059578063bb9fe6bf146102a7578063c23a5cea146102bc578063ee219423146102dc578063fc7e286d146102fc57600080fd5b80639b249f6914610254578063a619353114610274578063b760faf91461029457600080fd5b8063205c2878116100bb578063205c28781461015c5780634b1d7cf51461017c5780635287ce121461019c57806370a082311461021557600080fd5b80630396cb60146100f65780631d732756146101095780631fad948c1461013c57600080fd5b366100f1576100ef336103b3565b005b600080fd5b6100ef610104366004612498565b61041a565b34801561011557600080fd5b506101296101243660046125b5565b6106a6565b6040519081526020015b60405180910390f35b34801561014857600080fd5b506100ef61015736600461273c565b6107f7565b34801561016857600080fd5b506100ef610177366004612792565b61091f565b34801561018857600080fd5b506100ef61019736600461273c565b610a9b565b3480156101a857600080fd5b506101bc6101b73660046127be565b610dbb565b6040805182516001600160701b03908116825260208085015115159083015283830151169181019190915260608083015163ffffffff16908201526080918201516001600160401b03169181019190915260a001610133565b34801561022157600080fd5b506101296102303660046127be565b6001600160a01b03166000908152602081905260409020546001600160701b031690565b34801561026057600080fd5b506100ef61026f3660046127db565b610e66565b34801561028057600080fd5b5061012961028f36600461281c565b610f1c565b6100ef6102a23660046127be565b6103b3565b3480156102b357600080fd5b506100ef610f5e565b3480156102c857600080fd5b506100ef6102d73660046127be565b61106d565b3480156102e857600080fd5b506100ef6102f736600461281c565b6112a4565b34801561030857600080fd5b5061036c6103173660046127be565b600060208190529081526040902080546001909101546001600160701b0380831692600160701b810460ff1692600160781b9091049091169063ffffffff81169064010000000090046001600160401b031685565b604080516001600160701b0396871681529415156020860152929094169183019190915263ffffffff1660608201526001600160401b03909116608082015260a001610133565b6103bd81346113f2565b6001600160a01b03811660008181526020818152604091829020805492516001600160701b03909316835292917f2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c491015b60405180910390a25050565b33600090815260208190526040902063ffffffff82166104815760405162461bcd60e51b815260206004820152601a60248201527f6d757374207370656369667920756e7374616b652064656c617900000000000060448201526064015b60405180910390fd5b600181015463ffffffff90811690831610156104df5760405162461bcd60e51b815260206004820152601c60248201527f63616e6e6f7420646563726561736520756e7374616b652074696d65000000006044820152606401610478565b80546000906104ff903490600160781b90046001600160701b031661286d565b9050600081116105465760405162461bcd60e51b81526020600482015260126024820152711b9bc81cdd185ad9481cdc1958da599a595960721b6044820152606401610478565b6001600160701b03811061058d5760405162461bcd60e51b815260206004820152600e60248201526d7374616b65206f766572666c6f7760901b6044820152606401610478565b6040805160a08101825283546001600160701b0390811682526001602080840182815286841685870190815263ffffffff808b16606088019081526000608089018181523380835296829052908a902098518954955194518916600160781b02600160781b600160e81b0319951515600160701b026effffffffffffffffffffffffffffff19909716919099161794909417929092169590951786555194909201805492516001600160401b0316640100000000026001600160601b0319909316949093169390931717905590517fa5ae833d0bb1dcd632d98a8b70973e8516812898e19bf27b70071ebc8dc52c0190610699908490879091825263ffffffff16602082015260400190565b60405180910390a2505050565b6000805a90503330146106b857600080fd5b8451600087156107955760008083600001516001600160a01b031684604001518c8c6040516106e8929190612885565b60006040518083038160008787f1925050503d8060008114610726576040519150601f19603f3d011682016040523d82523d6000602084013e61072b565b606091505b5091509150816107925780511561078d5783600001516001600160a01b031689602001517f1c4fada7374c0a9ee8841fc38afe82932dc0f8e69012e927f061a8bae611a2018660200151846040516107849291906128ed565b60405180910390a35b600192505b50505b600087608001515a85030190506107e76000838a8a8a8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525088925061148e915050565b9450505050505b95945050505050565b816000816001600160401b0381111561081257610812612506565b60405190808252806020026020018201604052801561084b57816020015b61083861240e565b8152602001906001900390816108305790505b50905060005b828110156108ac576108a28187878481811061086f5761086f612906565b9050602002810190610881919061291c565b84848151811061089357610893612906565b6020026020010151600061177f565b5050600101610851565b506000805b8381101561090c57610900818888848181106108cf576108cf612906565b90506020028101906108e1919061291c565b8584815181106108f3576108f3612906565b602002602001015161194a565b909101906001016108b1565b506109178482611a12565b505050505050565b33600090815260208190526040902080546001600160701b03168211156109885760405162461bcd60e51b815260206004820152601960248201527f576974686472617720616d6f756e7420746f6f206c61726765000000000000006044820152606401610478565b805461099e9083906001600160701b031661293d565b81546001600160701b0319166001600160701b0391909116178155604080516001600160a01b03851681526020810184905233917fd1c19fbcd4551a5edfb66d43d2e337c04837afda3482b42bdf569a8fccdae5fb910160405180910390a26000836001600160a01b03168360405160006040518083038185875af1925050503d8060008114610a4a576040519150601f19603f3d011682016040523d82523d6000602084013e610a4f565b606091505b5050905080610a955760405162461bcd60e51b81526020600482015260126024820152716661696c656420746f20776974686472617760701b6044820152606401610478565b50505050565b816000805b82811015610af557858582818110610aba57610aba612906565b9050602002810190610acc9190612954565b610ad6908061296a565b610ae191508361286d565b915080610aed816129b3565b915050610aa0565b506000816001600160401b03811115610b1057610b10612506565b604051908082528060200260200182016040528015610b4957816020015b610b3661240e565b815260200190600190039081610b2e5790505b5090506000805b84811015610cd25736888883818110610b6b57610b6b612906565b9050602002810190610b7d9190612954565b9050366000610b8c838061296a565b90925090506000610ba360408501602086016127be565b90508160005b81811015610c1c57610bf988868684818110610bc757610bc7612906565b9050602002810190610bd9919061291c565b8b8b81518110610beb57610beb612906565b60200260200101518661177f565b50508780610c06906129b3565b9850508080610c14906129b3565b915050610ba9565b506001600160a01b03821615610cba576001600160a01b03821663e3563a4f8585610c4a60408a018a6129cc565b6040518563ffffffff1660e01b8152600401610c699493929190612b77565b60006040518083038186803b158015610c8157600080fd5b505afa925050508015610c92575060015b610cba5760405163086a9f7560e41b81526001600160a01b0383166004820152602401610478565b50505050508080610cca906129b3565b915050610b50565b50600080915060005b85811015610da65736898983818110610cf657610cf6612906565b9050602002810190610d089190612954565b9050366000610d17838061296a565b90925090508060005b81811015610d8e57610d6288858584818110610d3e57610d3e612906565b9050602002810190610d50919061291c565b8b8b815181106108f3576108f3612906565b610d6c908861286d565b965087610d78816129b3565b9850508080610d86906129b3565b915050610d20565b50505050508080610d9e906129b3565b915050610cdb565b50610db18682611a12565b5050505050505050565b6040805160a081018252600080825260208201819052918101829052606081018290526080810191909152506001600160a01b031660009081526020818152604091829020825160a08101845281546001600160701b038082168352600160701b820460ff16151594830194909452600160781b90049092169282019290925260019091015463ffffffff8116606083015264010000000090046001600160401b0316608082015290565b604051632b870d1b60e11b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063570e1a3690610eb49085908590600401612bf4565b6020604051808303816000875af1158015610ed3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ef79190612c08565b604051633653dc0360e11b81526001600160a01b039091166004820152602401610478565b6000610f2782611ac3565b6040805160208101929092523090820152466060820152608001604051602081830303815290604052805190602001209050919050565b3360009081526020819052604081206001810154909163ffffffff9091169003610f9a5760405162461bcd60e51b815260040161047890612c25565b8054600160701b900460ff16610fe65760405162461bcd60e51b8152602060048201526011602482015270616c726561647920756e7374616b696e6760781b6044820152606401610478565b6001810154600090610ffe9063ffffffff1642612c55565b6001830180546bffffffffffffffff0000000019166401000000006001600160401b03841690810291909117909155835460ff60701b1916845560405190815290915033907ffa9b3c14cc825c412c9ed81b3ba365a5b459439403f18829e572ed53a4180f0a9060200161040e565b3360009081526020819052604090208054600160781b90046001600160701b0316806110d25760405162461bcd60e51b81526020600482015260146024820152734e6f207374616b6520746f20776974686472617760601b6044820152606401610478565b600182015464010000000090046001600160401b03166111345760405162461bcd60e51b815260206004820152601d60248201527f6d7573742063616c6c20756e6c6f636b5374616b6528292066697273740000006044820152606401610478565b6001820154426401000000009091046001600160401b0316111561119a5760405162461bcd60e51b815260206004820152601b60248201527f5374616b65207769746864726177616c206973206e6f742064756500000000006044820152606401610478565b6001820180546001600160601b03191690558154600160781b600160e81b0319168255604080516001600160a01b03851681526020810183905233917fb7c918e0e249f999e965cafeb6c664271b3f4317d296461500e71da39f0cbda3910160405180910390a26000836001600160a01b03168260405160006040518083038185875af1925050503d806000811461124e576040519150601f19603f3d011682016040523d82523d6000602084013e611253565b606091505b5050905080610a955760405162461bcd60e51b815260206004820152601860248201527f6661696c656420746f207769746864726177207374616b6500000000000000006044820152606401610478565b60005a90506112b161240e565b6000806112c260008685600161177f565b60408501519193509150600060c08701355a6112de908861293d565b6112e8919061286d565b905060006112fd866000015160a00151610dbb565b604080518082018252908201516001600160701b03168152606082015163ffffffff1660208201529091506001600160a01b038616156113d15761134086610dbb565b60408051606080820183526001600160a01b038a81168352848401516001600160701b031660208085019182529286015163ffffffff168486019081529451630b0ab6f360e21b8152600481018a9052602481018b9052604481018c905287516064820152928701516084840152835190911660a48301525160c4820152915160e483015291935061010401610478565b82848683604051634d6db6f560e11b81526004016104789493929190612c80565b6001600160a01b038216600090815260208190526040812080549091906114239084906001600160701b031661286d565b90506001600160701b0381111561146f5760405162461bcd60e51b815260206004820152601060248201526f6465706f736974206f766572666c6f7760801b6044820152606401610478565b81546001600160701b0319166001600160701b03919091161790555050565b6000805a8551909150600090816114a482611adc565b60a08301519091506001600160a01b0381166114c35782519350611655565b80935060008851111561165557868202955060028a60028111156114e9576114e9612caa565b1461155b57606083015160405163a9a2340960e01b81526001600160a01b0383169163a9a2340991611523908e908d908c90600401612cc0565b600060405180830381600088803b15801561153d57600080fd5b5087f1158015611551573d6000803e3d6000fd5b5050505050611655565b606083015160405163a9a2340960e01b81526001600160a01b0383169163a9a2340991611590908e908d908c90600401612cc0565b600060405180830381600088803b1580156115aa57600080fd5b5087f1935050505080156115bc575060015b611655576115c8612d07565b806308c379a00361160557506115dc612d23565b806115e75750611607565b8b828260405162fa072b60e01b815260040161047893929190612dac565b505b60405162fa072b60e01b8152600481018c90526001600160a01b038216602482015260606044820152600d60648201526c1c1bdcdd13dc081c995d995c9d609a1b608482015260a401610478565b5a850387019650818702955085896040015110156116cb5760405162fa072b60e01b8152600481018c90526001600160a01b038216602482015260606044820152601b60648201527f70726566756e642062656c6f772061637475616c476173436f73740000000000608482015260a401610478565b60408901518690036116dd85826113f2565b6000808c60028111156116f2576116f2612caa565b1490508460a001516001600160a01b031685600001516001600160a01b03168c602001517f33fd4d1f25a5461bea901784a6571de6debc16cd0831932c22c6969cd73ba99488602001518c89876040516117679493929190938452602084019290925260408301521515606082015260800190565b60405180910390a45050505050505095945050505050565b60008060005a85519091506117948782611b0c565b61179d87610f1c565b6020870152604081015160608201516080830151171760e088013517610100880135176effffffffffffffffffffffffffffff8111156118155760405162461bcd60e51b81526020600482015260136024820152726761732076616c756573206f766572666c6f7760681b6044820152606401610478565b60008061182184611c05565b90506118308b8b8b8b85611c53565b9098509650915061184043600052565b60a08401516060906001600160a01b0316156118875760006118658d8d8d8688611f41565b9092509050801580159061187857508781105b15611881578097505b50611898565b506040805160208101909152600081525b60005a87039050808c60a00135101561191b5760a086015160405162fa072b60e01b8152600481018f90526001600160a01b03909116602482015260606044820152602360648201527f55736564206d6f7265207468616e20766572696669636174696f6e4761734c696084820152621b5a5d60ea1b60a482015260c401610478565b60408b018390528160608c015260c08c01355a8803018b60800181815250505050505050505094509492505050565b6000805a9050600061195d846060015190565b905030631d73275661197260608801886129cc565b87856040518563ffffffff1660e01b81526004016119939493929190612dd6565b6020604051808303816000875af19250505080156119ce575060408051601f3d908101601f191682019092526119cb91810190612e89565b60015b611a0657600084608001515a6119e4908561293d565b6119ee919061286d565b90506119fe87600287858561148e565b935050611a09565b92505b50509392505050565b6001600160a01b038216611a5e5760405162461bcd60e51b8152602060048201526013602482015272696e76616c69642062656e656669636961727960681b6044820152606401610478565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114611aab576040519150601f19603f3d011682016040523d82523d6000602084013e611ab0565b606091505b5050905080611abe57600080fd5b505050565b6000611ace82612177565b805190602001209050919050565b60c081015160e082015160009190808203611af8575092915050565b611b04824883016121b6565b949350505050565b611b1960208301836127be565b6001600160a01b0316815260208083013590820152608080830135604083015260a0830135606083015260c0808401359183019190915260e0808401359183019190915261010083013590820152366000611b786101208501856129cc565b90925090508015611bf8576014811015611bd45760405162461bcd60e51b815260206004820152601860248201527f696e76616c6964207061796d6173746572416e644461746100000000000000006044820152606401610478565b611be2601460008385612ea2565b611beb91612ecc565b60601c60a0840152610a95565b600060a084015250505050565b60a081015160009081906001600160a01b0316611c23576001611c26565b60035b60ff1690506000836080015182856060015102856040015101019050611c4b84611adc565b029392505050565b6000806000805a8751909150611c768a82611c7160408d018d6129cc565b6121ce565b6000196001600160a01b03881601611cfc5780600001516001600160a01b0316633ad59dbc6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015611ce6575060408051601f3d908101601f19168201909252611ce391810190612c08565b60015b611cf65760009350839650611cfc565b96508693505b805160a0820151600091906001600160a01b038116611d4d576001600160a01b0382166000908152602081905260409020546001600160701b0316898111611d4657808a03611d49565b60005b9350505b816001600160a01b0316630825d1fc85606001518e8e602001518e886040518663ffffffff1660e01b8152600401611d889493929190612efc565b60206040518083038160008887f193505050508015611dc4575060408051601f3d908101601f19168201909252611dc191810190612e89565b60015b611e4057611dd0612d07565b806308c379a003611e0e5750611de4612d23565b80611def5750611e10565b8d60008260405162fa072b60e01b815260040161047893929190612dac565b505b60405162fa072b60e01b8152600481018e9052600060248201819052606060448301526064820152608401610478565b8015801590611e4e57504281105b15611e70578d600060405162fa072b60e01b8152600401610478929190612f34565b95506001600160a01b038116611f2c576001600160a01b038216600090815260208190526040902080546001600160701b0316808b1115611f0f578e600060405162fa072b60e01b81526004016104789291909182526001600160a01b03166020820152606060408201819052601a908201527f6163636f756e74206469646e2774207061792070726566756e64000000000000608082015260a00190565b81546001600160701b031916908b90036001600160701b03161790555b5a850397505050505050955095509592505050565b825160a08101516001600160a01b03811660009081526020819052604081208054606094929391906001600160701b03811690600160701b900460ff1680611f9f578b8460405162fa072b60e01b8152600401610478929190612f6a565b888210156120055760405162fa072b60e01b8152600481018d90526001600160a01b038516602482015260606044820152601960648201527f7061796d6173746572206465706f73697420746f6f206c6f7700000000000000608482015260a401610478565b8882038360000160006101000a8154816001600160701b0302191690836001600160701b031602179055506000888660600151039050846001600160a01b031663f465c77e828e8e602001518e6040518563ffffffff1660e01b815260040161207093929190612fa9565b60006040518083038160008887f1935050505080156120b157506040513d6000823e601f3d908101601f191682016040526120ae9190810190612fce565b60015b612134576120bd612d07565b806308c379a0036120fa57506120d1612d23565b806120dc57506120fc565b8d868260405162fa072b60e01b815260040161047893929190612dac565b505b60405162fa072b60e01b8152600481018e90526001600160a01b03861660248201526060604482015260006064820152608401610478565b801580159061214257504281105b15612163578e8760405162fa072b60e01b8152600401610478929190612f34565b909e909d509b505050505050505050505050565b606036600061218a6101408501856129cc565b915091508360208184030360405194506020810185016040528085528082602087013750505050919050565b60008183106121c557816121c7565b825b9392505050565b8015610a955782516001600160a01b03163b1561223b5760405162fa072b60e01b8152600481018590526000602482015260606044820152601a60648201527f73656e64657220616c726561647920636f6e7374727563746564000000000000608482015260a401610478565b604051632b870d1b60e11b81526000906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063570e1a369061228c9086908690600401612bf4565b6020604051808303816000875af11580156122ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122cf9190612c08565b90506001600160a01b0381166123275760405162fa072b60e01b8152600481018690526000602482015260606044820152600f60648201526e1a5b9a5d10dbd9194819985a5b1959608a1b608482015260a401610478565b83516001600160a01b0382811691161461239f5760405162fa072b60e01b8152600481018690526000602482015260606044820152602560648201527f73656e64657220646f65736e2774206d6174636820696e6974436f6465206164608482015264647265737360d81b60a482015260c401610478565b806001600160a01b03163b6000036124075760405162fa072b60e01b8152600481018690526000602482015260606044820152602060648201527f696e6974436f6465206661696c656420746f206372656174652073656e646572608482015260a401610478565b5050505050565b6040518060a0016040528061247360405180610100016040528060006001600160a01b031681526020016000815260200160008152602001600081526020016000815260200160006001600160a01b0316815260200160008152602001600081525090565b8152602001600080191681526020016000815260200160008152602001600081525090565b6000602082840312156124aa57600080fd5b813563ffffffff811681146121c757600080fd5b60008083601f8401126124d057600080fd5b5081356001600160401b038111156124e757600080fd5b6020830191508360208285010111156124ff57600080fd5b9250929050565b634e487b7160e01b600052604160045260246000fd5b60a081018181106001600160401b038211171561253b5761253b612506565b60405250565b61010081018181106001600160401b038211171561253b5761253b612506565b601f8201601f191681016001600160401b038111828210171561258657612586612506565b6040525050565b6001600160a01b03811681146125a257600080fd5b50565b80356125b08161258d565b919050565b60008060008060008587036101c08112156125cf57600080fd5b86356001600160401b03808211156125e657600080fd5b6125f28a838b016124be565b9098509650601f19929092019161018091508183121561261157600080fd5b60405161261d8161251c565b6101008085121561262d57600080fd5b604051945061263b85612541565b61264760208c016125a5565b855260408b0135602086015260608b0135604086015260808b0135606086015260a08b0135608086015261267d60c08c016125a5565b60a086015260e08b81013560c0870152908b0135908501529283526101208901356020840152610140890135604084015261016089013560608401528189013560808401529194506101a088013591808311156126d957600080fd5b50506126e7888289016124be565b969995985093965092949392505050565b60008083601f84011261270a57600080fd5b5081356001600160401b0381111561272157600080fd5b6020830191508360208260051b85010111156124ff57600080fd5b60008060006040848603121561275157600080fd5b83356001600160401b0381111561276757600080fd5b612773868287016126f8565b90945092505060208401356127878161258d565b809150509250925092565b600080604083850312156127a557600080fd5b82356127b08161258d565b946020939093013593505050565b6000602082840312156127d057600080fd5b81356121c78161258d565b600080602083850312156127ee57600080fd5b82356001600160401b0381111561280457600080fd5b612810858286016124be565b90969095509350505050565b60006020828403121561282e57600080fd5b81356001600160401b0381111561284457600080fd5b820161016081850312156121c757600080fd5b634e487b7160e01b600052601160045260246000fd5b6000821982111561288057612880612857565b500190565b8183823760009101908152919050565b60005b838110156128b0578181015183820152602001612898565b83811115610a955750506000910152565b600081518084526128d9816020860160208601612895565b601f01601f19169290920160200192915050565b828152604060208201526000611b0460408301846128c1565b634e487b7160e01b600052603260045260246000fd5b6000823561015e1983360301811261293357600080fd5b9190910192915050565b60008282101561294f5761294f612857565b500390565b60008235605e1983360301811261293357600080fd5b6000808335601e1984360301811261298157600080fd5b8301803591506001600160401b0382111561299b57600080fd5b6020019150600581901b36038213156124ff57600080fd5b6000600182016129c5576129c5612857565b5060010190565b6000808335601e198436030181126129e357600080fd5b8301803591506001600160401b038211156129fd57600080fd5b6020019150368190038213156124ff57600080fd5b6000808335601e19843603018112612a2957600080fd5b83016020810192503590506001600160401b03811115612a4857600080fd5b8036038213156124ff57600080fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6000610160612a9f84612a92856125a5565b6001600160a01b03169052565b60208301356020850152612ab66040840184612a12565b826040870152612ac98387018284612a57565b92505050612ada6060840184612a12565b8583036060870152612aed838284612a57565b925050506080830135608085015260a083013560a085015260c083013560c085015260e083013560e0850152610100808401358186015250610120612b3481850185612a12565b86840383880152612b46848284612a57565b9350505050610140612b5a81850185612a12565b86840383880152612b6c848284612a57565b979650505050505050565b6040808252810184905260006060600586901b830181019083018783805b89811015612bdd57868503605f190184528235368c900361015e19018112612bbb578283fd5b612bc7868d8301612a80565b9550506020938401939290920191600101612b95565b505050508281036020840152612b6c818587612a57565b602081526000611b04602083018486612a57565b600060208284031215612c1a57600080fd5b81516121c78161258d565b602081526000612c4f60208301600a8152691b9bdd081cdd185ad95960b21b602082015260400190565b92915050565b60006001600160401b03808316818516808303821115612c7757612c77612857565b01949350505050565b84815260208082018590526040820184905282516060830152820151608082015260a081016107ee565b634e487b7160e01b600052602160045260246000fd5b600060038510612ce057634e487b7160e01b600052602160045260246000fd5b84825260606020830152612cf760608301856128c1565b9050826040830152949350505050565b600060033d1115612d205760046000803e5060005160e01c5b90565b600060443d1015612d315790565b6040516003193d81016004833e81513d6001600160401b038160248401118184111715612d6057505050505090565b8285019150815181811115612d785750505050505090565b843d8701016020828501011115612d925750505050505090565b612da160208286010187612561565b509095945050505050565b8381526001600160a01b03831660208201526060604082018190526000906107ee908301846128c1565b60006101c0808352612deb8184018789612a57565b9050845160018060a01b03808251166020860152602082015160408601526040820151606086015260608201516080860152608082015160a08601528060a08301511660c08601525060c081015160e085015260e08101516101008501525060208501516101208401526040850151610140840152606085015161016084015260808501516101808401528281036101a0840152612b6c81856128c1565b600060208284031215612e9b57600080fd5b5051919050565b60008085851115612eb257600080fd5b83861115612ebf57600080fd5b5050820193919092039150565b6001600160601b03198135818116916014851015612ef45780818660140360031b1b83161692505b505092915050565b608081526000612f0f6080830187612a80565b6020830195909552506001600160a01b03929092166040830152606090910152919050565b9182526001600160a01b0316602082015260606040820181905260079082015266195e1c1a5c995960ca1b608082015260a00190565b8281526001600160a01b0382166020820152606060408201819052600a90820152691b9bdd081cdd185ad95960b21b6080820152600060a08201611b04565b606081526000612fbc6060830186612a80565b60208301949094525060400152919050565b60008060408385031215612fe157600080fd5b82516001600160401b0380821115612ff857600080fd5b818501915085601f83011261300c57600080fd5b81518181111561301e5761301e612506565b6040519150613037601f8201601f191660200183612561565b80825286602082850101111561304c57600080fd5b61305d816020840160208601612895565b5060209490940151939593945050505056fea26469706673582212202159c18406e2972f63689fb8c6acbc1cc7edd8f616147a205adbfba619b9afb264736f6c634300080f0033608060405234801561001057600080fd5b506101f3806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063570e1a3614610030575b600080fd5b61004361003e3660046100ec565b61005f565b6040516001600160a01b03909116815260200160405180910390f35b60008061006f601482858761015e565b61007891610188565b60601c9050600061008c846014818861015e565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092018290525084519495509360209350849250905082850182875af190506000519350806100e357600093505b50505092915050565b600080602083850312156100ff57600080fd5b823567ffffffffffffffff8082111561011757600080fd5b818501915085601f83011261012b57600080fd5b81358181111561013a57600080fd5b86602082850101111561014c57600080fd5b60209290920196919550909350505050565b6000808585111561016e57600080fd5b8386111561017b57600080fd5b5050820193919092039150565b6bffffffffffffffffffffffff1981358181169160148510156101b55780818660140360031b1b83161692505b50509291505056fea2646970667358221220a83454d153689b7518b34cf8a9a316ade9b2c491a4243587179ac618bf57b5dd64736f6c634300080f0033";

type EntryPointConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EntryPointConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EntryPoint__factory extends ContractFactory {
  constructor(...args: EntryPointConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<EntryPoint> {
    return super.deploy(overrides || {}) as Promise<EntryPoint>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): EntryPoint {
    return super.attach(address) as EntryPoint;
  }
  override connect(signer: Signer): EntryPoint__factory {
    return super.connect(signer) as EntryPoint__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EntryPointInterface {
    return new utils.Interface(_abi) as EntryPointInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): EntryPoint {
    return new Contract(address, _abi, signerOrProvider) as EntryPoint;
  }
}
