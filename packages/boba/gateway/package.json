{
  "name": "@boba/gateway",
  "version": "0.0.3",
  "private": true,
  "scripts": {
    "buildenv-dev": "react-env",
    "buildenv-prod": "NODE_ENV=production react-env --dest build",
    "get_artifacts": "./scripts/get_all_artifacts.sh",
    "serve": "npm run buildenv-prod && serve -s build -l 3000 -c public/serve.json",
    "start": "npm run buildenv-dev && react-scripts start",
    "build:prod": "GENERATE_SOURCEMAP=false REACT_APP_ENV=prod react-scripts build",
    "build:dev": "GENERATE_SOURCEMAP=false REACT_APP_ENV=dev react-scripts build",
    "audit-check": "audit-ci --moderate",
    "postinstall": "patch-package",
    "deploy:bobabase": "GENERATE_SOURCEMAP=false REACT_APP_ENV=prod REACT_APP_CHAIN=bobaBase REACT_APP_L1_NATIVE_TOKEN_SYMBOL=DEV react-scripts build && aws s3 rm s3://gateway.bobabase.boba.network --recursive && aws s3 sync build s3://gateway.bobabase.boba.network && aws s3 cp s3://gateway.bobabase.boba.network/index.html s3://gateway.bobabase.boba.network/index.html --metadata-directive REPLACE --cache-control max-age=0 --content-type text/html",
    "deploy:bobabeam": "GENERATE_SOURCEMAP=false REACT_APP_ENV=prod REACT_APP_CHAIN=bobaBeam REACT_APP_L1_NATIVE_TOKEN_SYMBOL=GLMR react-scripts build && aws s3 rm s3://gateway.bobabeam.boba.network --recursive && aws s3 sync build s3://gateway.bobabeam.boba.network && aws s3 cp s3://gateway.bobabeam.boba.network/index.html s3://gateway.bobabeam.boba.network/index.html --metadata-directive REPLACE --cache-control max-age=0 --content-type text/html",
    "deploy:bobaoperatestnet": "GENERATE_SOURCEMAP=false REACT_APP_ENV=prod REACT_APP_CHAIN=bobaOperaTestnet REACT_APP_L1_NATIVE_TOKEN_SYMBOL=FTM react-scripts build && aws s3 rm s3://gateway.testnet.bobaopera.boba.network --recursive && aws s3 sync build s3://gateway.testnet.bobaopera.boba.network && aws s3 cp s3://gateway.testnet.bobaopera.boba.network/index.html s3://gateway.testnet.bobaopera.boba.network/index.html --metadata-directive REPLACE --cache-control max-age=0 --content-type text/html",
    "deploy:bobaavaxtestnet": "GENERATE_SOURCEMAP=false REACT_APP_ENV=prod REACT_APP_CHAIN=bobaFuji REACT_APP_L1_NATIVE_TOKEN_SYMBOL=AVAX REACT_APP_L1_NATIVE_TOKEN_NAME=Avalanche react-scripts build && aws s3 rm s3://gateway.testnet.avax.boba.network --recursive && aws s3 sync build s3://gateway.testnet.avax.boba.network && aws s3 cp s3://gateway.testnet.avax.boba.network/index.html s3://gateway.testnet.avax.boba.network/index.html --metadata-directive REPLACE --cache-control max-age=0 --content-type text/html",
    "deploy:bobaavax": "GENERATE_SOURCEMAP=false REACT_APP_ENV=prod REACT_APP_CHAIN=bobaAvax REACT_APP_L1_NATIVE_TOKEN_SYMBOL=AVAX REACT_APP_L1_NATIVE_TOKEN_NAME=Avalanche react-scripts build && aws s3 rm s3://gateway.avax.boba.network --recursive && aws s3 sync build s3://gateway.avax.boba.network && aws s3 cp s3://gateway.avax.boba.network/index.html s3://gateway.avax.boba.network/index.html --metadata-directive REPLACE --cache-control max-age=0 --content-type text/html",
    "deploy:bnbtestnet": "GENERATE_SOURCEMAP=false REACT_APP_ENV=prod REACT_APP_CHAIN=bobaBnbTestnet REACT_APP_L1_NATIVE_TOKEN_SYMBOL=tBNB react-scripts build && aws s3 rm s3://gateway.tetsnet.bnb.boba.network --recursive && aws s3 sync build s3://gateway.tetsnet.bnb.boba.network && aws s3 cp s3://gateway.tetsnet.bnb.boba.network/index.html s3://gateway.tetsnet.bnb.boba.network/index.html --metadata-directive REPLACE --cache-control max-age=0 --content-type text/html",
    "deploy:bnb": "GENERATE_SOURCEMAP=false REACT_APP_ENV=prod REACT_APP_CHAIN=bobaBnb REACT_APP_L1_NATIVE_TOKEN_SYMBOL=BNB react-scripts build && aws s3 rm s3://gateway.bnb.boba.network --recursive && aws s3 sync build s3://gateway.bnb.boba.network && aws s3 cp s3://gateway.bnb.boba.network/index.html s3://gateway.bnb.boba.network/index.html --metadata-directive REPLACE --cache-control max-age=0 --content-type text/html"
  },
  "dependencies": {
    "@apollo/client": "^3.5.10",
    "@emotion/react": "^11.7.1",
    "@emotion/styled": "^11.6.0",
    "@eth-optimism/contracts": "^0.5.11",
    "@eth-optimism/core-utils": "0.8.1",
    "@ethersproject/units": "^5.0.11",
    "@mui/base": "^5.0.0-alpha.67",
    "@mui/icons-material": "^5.3.1",
    "@mui/material": "^5.4.0",
    "@mui/styles": "^5.3.0",
    "@sentry/react": "^7.12.1",
    "@sentry/tracing": "^7.12.1",
    "@typescript-eslint/eslint-plugin": "^5.10.2",
    "@typescript-eslint/parser": "^5.10.2",
    "axios": "^0.21.1",
    "bignumber.js": "^9.0.1",
    "bn.js": "^5.1.3",
    "dotenv": "^8.2.0",
    "eslint-config-react-app": "^7.0.0",
    "ethers": "^5.0.32",
    "graphql": "^16.3.0",
    "html-react-parser": "^1.4.0",
    "human-standard-token-abi": "^2.0.0",
    "lodash": "^4.17.20",
    "moment": "^2.24.0",
    "node-forge": "^1.3.1",
    "patch-package": "^6.2.2",
    "react": "^17.0.2",
    "react-card-flip": "^1.1.5",
    "react-copy-to-clipboard": "^5.0.4",
    "react-datepicker": "^4.6.0",
    "react-dom": "^17.0.2",
    "react-ga4": "^1.4.1",
    "react-multi-carousel": "^2.6.5",
    "react-redux": "^7.2.6",
    "react-router-dom": "^6.2.1",
    "react-scripts": "^3.4.3",
    "react-select": "^5.2.2",
    "react-zendesk": "^0.1.13",
    "recharts": "^2.1.10",
    "redux": "^4.1.2",
    "redux-thunk": "^2.3.0",
    "sass": "^1.51.0",
    "serve": "^11.3.2",
    "truncate-middle": "^1.0.6",
    "ts-md5": "^1.2.11",
    "typescript": "^4.3.5"
  },
  "eslintConfig": {
    "extends": "react-app"
  },
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  },
  "devDependencies": {
    "@beam-australia/react-env": "2.1.2",
    "audit-ci": "^3.1.1"
  }
}
