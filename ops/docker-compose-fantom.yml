# # Accounts and their usage
#  Deployer:
#- Address: 0xED7c28AFfa5FB717Acf3e9B9BCDE13A7FE1356BE
#- PrivKey: 0x8ffbfce79f185f4b4fb06cb3b51fcdf0fb7403b6e0d4011893ebabfc68d5187c

## Integration 3 PK:
#- Address: 0x2327691f4EDb2A6341e7a29e3C15ba1Cf79066FD
#- PrivKey: 0xca2363fa363c2bc26bf070cf96084da59243d518d9c6ac0dc54586fb6c66c6f1

## Relayer:
#- Address: 0xAA4843929683CA32367eB1BaCF050F42c562e461
#- PrivKey: 0xa95aa44137b087b519cb7d2be9340f4c36709cb0d3de94ba6ba2095563a44696

## Fast Relayer:
#- Address: 0x2F163d4f8f0eC03888069437313598E9F1De3066
#- PrivKey: 0xdc5b19a14a3bbb3e9d70da1955114415d9f230ae661c3f8a2b22ad3a67cd2902

# Integration 2 PK:
#- Address: 0xBc9b9eF336066823B3Ae9948e6BFc0d10fb0a395
#- PrivKey: 0xf71e04bb88b3f497fc2cf9b4e35c7e307c2ec6483b8084f750820d09fbe19b54

# GasPrice Oracle
#- Address: 0xbA77c1e7d75aE7e34e2378641FE45EEC7Ad87935
#- PrivKey: 0xa6c4234c9bcae01a8d9d2301ab14ce2fcdd38fe57bc28fa03cd0678630cb8f5a

## Account #0
x-deployer_pk: &deployer_pk
  DEPLOYER_PRIVATE_KEY: '0x8ffbfce79f185f4b4fb06cb3b51fcdf0fb7403b6e0d4011893ebabfc68d5187c'

x-relayer_pk: &relayer_pk
  RELAYER_PRIVATE_KEY: '0xa95aa44137b087b519cb7d2be9340f4c36709cb0d3de94ba6ba2095563a44696'

# Account #9
x-fast-relayer_pk: &fast-relayer_pk
  FAST_RELAYER_PRIVATE_KEY: '0xdc5b19a14a3bbb3e9d70da1955114415d9f230ae661c3f8a2b22ad3a67cd2902'

# Account #0 - allows the fee test
x-integration_pk: &integration_pk
  PRIVATE_KEY: '0x8ffbfce79f185f4b4fb06cb3b51fcdf0fb7403b6e0d4011893ebabfc68d5187c'

# Account #10 - allows the fee test
x-integration_2_pk: &integration_2_pk
  PRIVATE_KEY_2: '0xf71e04bb88b3f497fc2cf9b4e35c7e307c2ec6483b8084f750820d09fbe19b54'

# Account #7 - allows the fee test
x-integration_3_pk: &integration_3_pk
  PRIVATE_KEY_3: '0xca2363fa363c2bc26bf070cf96084da59243d518d9c6ac0dc54586fb6c66c6f1'

x-integration_4_pk: &integration_4_pk
  GAS_PRICE_ORACLE_PRIVATE_KEY: '0xa6c4234c9bcae01a8d9d2301ab14ce2fcdd38fe57bc28fa03cd0678630cb8f5a'

version: "3"

services:
  l1_chain:
    image: bobanetwork/fantom:v1.1.1-rc.1
    restart: always
    command: >
      --datadir ~/.lachesis
      --fakenet 1/1,test_accs.json --port=5050 --password /tmp/fakepassword
      --http --http.addr="0.0.0.0" --http.port=18545 --http.vhosts="*" --http.corsdomain="*" --http.api="eth,debug,admin,web3,personal,net,txpool,ftm,sfc"
      --ws --ws.addr="0.0.0.0" --ws.port=18546 --ws.origins="*" --ws.api="eth,debug,admin,web3,personal,net,txpool,ftm,sfc"
      --nousb --verbosity=3 --metrics
    ports:
      - '5050:5050'
      - '5050:5050/udp'
      - '9545:18545'
      - '18546:18546'
      - '18547:18547'
      - '19090:19090'

  deployer:
    depends_on:
      - l1_chain
      - dtl
    image: bobanetwork/deployer:latest
    build:
      context: ..
      dockerfile: ./ops/docker/Dockerfile.packages
      target: deployer
    entrypoint: ./deployer.sh
    environment:
      FRAUD_PROOF_WINDOW_SECONDS: 0
      L1_NODE_WEB3_URL: http://l1_chain:18545
      # these keys are hardhat's first 2 accounts, DO NOT use in production
      << : [*deployer_pk, *relayer_pk]
      SEQUENCER_ADDRESS: "0x6236C601FfD52c4793e3B49B15bcdc1137E6339D"
      PROPOSER_ADDRESS: "0x814B1fac2aE5AbBf40Bb289b263ED4c367C50AA9"
      # setting the whitelist owner to address(0) disables the whitelist
      WHITELIST_OWNER: "0x0000000000000000000000000000000000000000"
      L1_FEE_WALLET_ADDRESS: "0x391716d440c151c42cdf1c95c1d83a5427bca52c"
      L2_CHAIN_ID: 31338
      L2_BLOCK_GAS_LIMIT: 11000000
      BLOCK_SIGNER_ADDRESS: "0x00000398232E2064F896018496b4b44b3D62751F"
      GAS_PRICE_ORACLE_OWNER: "0xbA77c1e7d75aE7e34e2378641FE45EEC7Ad87935"
      GAS_PRICE_ORACLE_OVERHEAD: "2750"
      GAS_PRICE_ORACLE_SCALAR: "1500000"
      GAS_PRICE_ORACLE_L1_BASE_FEE: "1"
      GAS_PRICE_ORACLE_GAS_PRICE: "1000000000"
      GAS_PRICE_ORACLE_DECIMALS: "6"
      L1_NATIVE_TOKEN_NAME: "Fantom"
      L1_NATIVE_TOKEN_SYMBOL: "FTM"
      L1_NATIVE_TOKEN_DECIMALS: "18"
      # skip compilation when run in docker-compose, since the contracts
      # were already compiled in the builder step
      NO_COMPILE: 1
      DTL_REGISTRY_URL: http://dtl:8081/addresses.json
      DTL_STATE_DUMP_REGISTRY_URL: http://dtl:8081/state-dump.latest.json
      RETRIES: 500
    ports:
        # expose the service to the host for getting the contract addrs
      - ${DEPLOYER_PORT:-8077}:8082

  # deploys boba contracts and serves contract addresses
  boba_deployer:
    depends_on:
      - l1_chain
      - dtl
      - l2geth
    image: bobanetwork/boba_deployer:latest
    build:
      context: ..
      dockerfile: ./ops/docker/Dockerfile.packages
      target: boba_deployer
    environment:
      L1_NODE_WEB3_URL: http://l1_chain:18545
      L2_NODE_WEB3_URL: http://l2geth:8545
      ADDRESS_MANAGER_ADDRESS: "0xf536cAF1a894E09945E649FCE3032E8E03ECb9A0"
      URL: http://dtl:8081/addresses.json
      # DO NOT use in production
      << : [*deployer_pk, *relayer_pk, *fast-relayer_pk]
      RETRIES: 200
      DTL_REGISTRY_URL: http://dtl:8081/boba-addr.json
      # skip compilation when run in docker-compose, since the contracts
      # were already compiled in the builder step
      NO_COMPILE: 1

  dtl:
    depends_on:
      - l1_chain
    image: bobanetwork/data-transport-layer:latest
    entrypoint: ./dtl.sh
    build:
      context: ..
      dockerfile: ./ops/docker/Dockerfile.packages
      target: data-transport-layer
    # override with the dtl script and the env vars required for it
    env_file:
      -  ./envs/dtl.env
    # set the rest of the env vars for the network whcih do not
    # depend on the docker-compose setup
    environment:
      URL: http://deployer:8082/addresses.json
      # connect to the 2 layers
      DATA_TRANSPORT_LAYER__L1_RPC_ENDPOINT: http://l1_chain:18545
      DATA_TRANSPORT_LAYER__L2_RPC_ENDPOINT: http://l2geth:8545
      DATA_TRANSPORT_LAYER__SYNC_FROM_L2: 'true'
      DATA_TRANSPORT_LAYER__L2_CHAIN_ID: 31338
      DATA_TRANSPORT_LAYER__BSS_HARDFORK_1_INDEX: 0
      DATA_TRANSPORT_LAYER__ETH1_CTC_DEPLOYMENT_HEIGHT: 0
      RETRIES: 200
      # reduce the polling interval for auto mining L1
      DATA_TRANSPORT_LAYER__POLLING_INTERVAL: 500
      # if no need to support Turing v0 set height of v0 = v1
      DATA_TRANSPORT_LAYER__TURING_V0_HEIGHT: 0
      DATA_TRANSPORT_LAYER__TURING_V1_HEIGHT: 0
    ports:
      - ${DTL_PORT:-7878}:7878
      - ${REGISTRY_PORT:-8080}:8081

  l2geth:
    depends_on:
      - l1_chain
      - dtl
    image: bobanetwork/l2geth:latest
    build:
      context: ..
      dockerfile: ./ops/docker/Dockerfile.geth
    # override with the geth script and the env vars required for it
    entrypoint: sh ./geth.sh
    env_file:
      - ./envs/geth.env
    restart: always
    environment:
      ETH1_HTTP: http://l1_chain:18545
      ROLLUP_TIMESTAMP_REFRESH: 5s
      ROLLUP_STATE_DUMP_PATH: http://dtl:8081/state-dump.latest.json
      # connecting to the DTL
      ROLLUP_CLIENT_HTTP: http://dtl:7878
      ETH1_CTC_DEPLOYMENT_HEIGHT: 8
      RETRIES: 200
      # no need to keep this secret, only used internally to sign blocks
      BLOCK_SIGNER_KEY: "6587ae678cf4fc9a33000cdbf9f35226b71dcc6a4684a31203241f9bcfd55d27"
      BLOCK_SIGNER_ADDRESS: "0x00000398232E2064F896018496b4b44b3D62751F"
      TURING_CREDIT_ADDRESS: "0x4200000000000000000000000000000000000020"
      EMERGENCY_FORK_NUMBER: 0
      L2_BOBA_TOKEN_ADDRESS: "0x4200000000000000000000000000000000000023"
      BOBA_GAS_PRICE_ORACLE_ADDRESS: "0x4200000000000000000000000000000000000024"
      # reduce the polling interval for auto mining L1
      ROLLUP_POLL_INTERVAL_FLAG: 500ms
    ports:
      - ${L2GETH_HTTP_PORT:-8545}:8545
      - ${L2GETH_WS_PORT:-8546}:8546
  relayer:
    depends_on:
      - l1_chain
      - dtl
      - l2geth
    image: bobanetwork/message-relayer:latest
    build:
      context: ..
      dockerfile: ./ops/docker/Dockerfile.packages
      target: message-relayer
    entrypoint: ./relayer.sh
    environment:
      L1_NODE_WEB3_URL: http://l1_chain:18545
      L2_NODE_WEB3_URL: http://l2geth:8545
      URL: http://dtl:8081/addresses.json
      # a funded hardhat account
      << : *relayer_pk
      RETRIES: 200
      POLLING_INTERVAL: 6000
      GET_LOGS_INTERVAL: 500
      FILTER_ENDPOINT: http://dtl:8081/boba-addr.json #this will fail early, but then start to work
      FILTER_POLLING_INTERVAL: 30000
      MAX_WAIT_TIME_S: 5
      MAX_WAIT_TX_TIME_S: 5
      RESUBMISSION_TIMEOUT: 5
      MULTI_RELAY_LIMIT: 5

  # a second relay system for messages that need to get to L1 quickly
  # NOTE - all withdrawal messages use the standard relayer with its 7 day window
  boba_message-relayer-fast:
    depends_on:
      - l1_chain
      - dtl
      - l2geth
    image: bobanetwork/boba_message-relayer-fast:latest
    build:
      context: ..
      dockerfile: ./ops/docker/Dockerfile.packages
      target: boba_message-relayer-fast
    environment:
      L1_NODE_WEB3_URL: http://l1_chain:18545
      L2_NODE_WEB3_URL: http://l2geth:8545
      URL: http://dtl:8081/addresses.json
      BOBA_URL: http://dtl:8081/boba-addr.json
      # This is who pays for the fast message relayer
      << : *fast-relayer_pk
      RETRIES: 200
      POLLING_INTERVAL: 6000
      GET_LOGS_INTERVAL: 500
      FILTER_ENDPOINT: http://dtl:8081/boba-addr.json
      FILTER_POLLING_INTERVAL: 30000
      MAX_WAIT_TIME_S: 5
      MAX_WAIT_TX_TIME_S: 5
      RESUBMISSION_TIMEOUT: 5
      MULTI_RELAY_LIMIT: 5
      FAST_RELAYER: 'true'

  batch_submitter:
    restart: always
    depends_on:
      - l1_chain
      - dtl
      - l2geth
      - kms
    image: bobanetwork/go-batch-submitter:latest
    build:
      context: ..
      dockerfile: ./ops/docker/Dockerfile.batch-submitter
    entrypoint: ./batch-submitter.sh
    env_file:
      - ./envs/batch-submitter.env
    environment:
      L1_ETH_RPC: http://l1_chain:18545
      L2_ETH_RPC: http://l2geth:8545
      URL: http://dtl:8081/addresses.json
      RETRIES: 200
      #KMS access setup
      AWS_ACCESS_KEY_ID: "1"
      AWS_SECRET_ACCESS_KEY: "11"
      BATCH_SUBMITTER_KMS_ENDPOINT: http://kms:8888/
      BATCH_SUBMITTER_KMS_REGION: us-east-1
      #aliases are setup, check seed.yml
      BATCH_SUBMITTER_SEQUENCER_KEY_ID: "0x6236C601FfD52c4793e3B49B15bcdc1137E6339D"
      BATCH_SUBMITTER_PROPOSER_KEY_ID: "0x814B1fac2aE5AbBf40Bb289b263ED4c367C50AA9"

  integration_tests:
    image: bobanetwork/integration-tests:latest
    deploy:
       replicas: 0
    build:
      context: ..
      dockerfile: ./ops/docker/Dockerfile.packages
      target: integration-tests
    entrypoint: ./integration-tests.sh
    environment:
      VERIFIER_URL: http://verifier:8545
      REPLICA_URL: http://replica:8545
      L1_URL: http://l1_chain:18545
      L2_URL: http://l2geth:8545
      URL: http://dtl:8081/addresses.json
      BASE_URL: http://dtl:8081/addresses.json
      BOBA_URL: http://dtl:8081/boba-addr.json
      AA_BOBA_URL: http://dtl:8081/aa-addr.json
      BUNDLER_URL: http://bundler:3000/rpc
      ENABLE_GAS_REPORT: 1
      NO_NETWORK: 1
      L2_CHAINID: 31338 #unfortunately, elsewhere the L2_CHAINID is called CHAIN_ID
      RETRIES: 200
      << : [*integration_pk, *integration_2_pk, *integration_3_pk, *integration_4_pk]
    volumes:
       - ~/result:/opt/optimism/integration-tests/result

  replica:
    depends_on:
      - dtl
      - l2geth
    image: bobanetwork/l2geth:latest
    deploy:
      replicas: 1
    build:
      context: ..
      dockerfile: ./ops/docker/Dockerfile.geth
    entrypoint: sh ./geth.sh
    env_file:
      - ./envs/geth.env
    environment:
      ETH1_HTTP: http://l1_chain:18545
      ROLLUP_TIMESTAMP_REFRESH: 5s
      ROLLUP_STATE_DUMP_PATH: http://dtl:8081/state-dump.latest.json
      ROLLUP_CLIENT_HTTP: http://dtl:7878
      ROLLUP_BACKEND: 'l2'
      ROLLUP_VERIFIER_ENABLE: 'true'
      RETRIES: 60
      # CTC height
      ETH1_CTC_DEPLOYMENT_HEIGHT: 8
      # no need to keep this secret, only used internally to sign blocks
      BLOCK_SIGNER_KEY: "6587ae678cf4fc9a33000cdbf9f35226b71dcc6a4684a31203241f9bcfd55d27"
      BLOCK_SIGNER_ADDRESS: "0x00000398232E2064F896018496b4b44b3D62751F"
      ROLLUP_POLL_INTERVAL_FLAG: "500ms"
      TURING_CREDIT_ADDRESS: "0x4200000000000000000000000000000000000020"
      SEQUENCER_CLIENT_HTTP: http://l2geth:8545
      EMERGENCY_FORK_NUMBER: 0
      L2_BOBA_TOKEN_ADDRESS: "0x4200000000000000000000000000000000000023"
      BOBA_GAS_PRICE_ORACLE_ADDRESS: "0x4200000000000000000000000000000000000024"
    ports:
      - ${L2GETH_HTTP_PORT:-8549}:8545
      - ${L2GETH_WS_PORT:-8550}:8546

  verifier:
    depends_on:
      - dtl
    image: bobanetwork/l2geth:latest
    deploy:
      replicas: 1
    build:
      context: ..
      dockerfile: ./ops/docker/Dockerfile.geth
    entrypoint: sh ./geth.sh
    env_file:
      - ./envs/geth.env
    environment:
        ETH1_HTTP: http://l1_chain:18545
        ROLLUP_TIMESTAMP_REFRESH: 5s
        ROLLUP_STATE_DUMP_PATH: http://dtl:8081/state-dump.latest.json
        ROLLUP_CLIENT_HTTP: http://dtl:7878
        ROLLUP_BACKEND: 'l1'
        ROLLUP_VERIFIER_ENABLE: 'true'
        RETRIES: 60
        # CTC height
        ETH1_CTC_DEPLOYMENT_HEIGHT: 8
        # no need to keep this secret, only used internally to sign blocks
        BLOCK_SIGNER_KEY: "6587ae678cf4fc9a33000cdbf9f35226b71dcc6a4684a31203241f9bcfd55d27"
        BLOCK_SIGNER_ADDRESS: "0x00000398232E2064F896018496b4b44b3D62751F"
        ROLLUP_POLL_INTERVAL_FLAG: "10s"
        TURING_CREDIT_ADDRESS: "0x4200000000000000000000000000000000000020"
        EMERGENCY_FORK_NUMBER: 0
        L2_BOBA_TOKEN_ADDRESS: "0x4200000000000000000000000000000000000023"
        BOBA_GAS_PRICE_ORACLE_ADDRESS: "0x4200000000000000000000000000000000000024"
    ports:
      - ${VERIFIER_HTTP_PORT:-8547}:8545
      - ${VERIFIER_WS_PORT:-8548}:8546

  fraud-detector:
    depends_on:
     - verifier
     - dtl
    image: bobanetwork/fraud-detector:latest
    deploy:
      replicas: 1
    build:
      context: ..
      dockerfile: ./boba_community/fraud-detector/docker/Dockerfile.fraud-detector
    environment:
      L1_NODE_WEB3_URL: http://l1_chain:18545
      L1_CONFIRMATIONS: 8
      L2_NODE_WEB3_URL: http://l2geth:8545
      L2_CHECK_INTERVAL: 10
      VERIFIER_WEB3_URL: http://verifier:8545
      ADDRESS_MANAGER_ADDRESS: "0xf536cAF1a894E09945E649FCE3032E8E03ECb9A0"
      L1_DEPLOYMENT_BLOCK: 8
      L2_START_BLOCK: 1
    ports:
      - ${FRAUD_CHECKER_HTTP_PORT:-8555}:8555

  #in no way should this be running in production
  kms:
    image: bobanetwork/local-kms:latest
    environment:
      PORT: "8888"
      KMS_REGION: "us-east-1"
    volumes:
      - type: bind
        source: ./seed-fantom.yaml
        target: /init/seed.yaml
    ports:
      - 8888:8888

networks:
  default:
    name: local-network
