# TODO: Prefix all env vars with service name
# TODO: Allow specifing the image tag to use
version: "3"

services:
  # base service builder
  builder:
    image: ethereumoptimism/builder
#    build:
#      context: ..
#      dockerfile: ./ops/docker/Dockerfile.monorepo

  # this is a helper service used because there's no official hardhat image
  l1_chain:
    image: ethereumoptimism/hardhat
#    build:
#      context: ./docker/hardhat
#      dockerfile: Dockerfile
    ports:
        # expose the service to the host for integration testing
      - ${L1CHAIN_HTTP_PORT:-9545}:8545

  deployer:
    depends_on:
      - l1_chain
    image: ethereumoptimism/deployer
#    build:
#      context: ..
#      dockerfile: ./ops/docker/Dockerfile.deployer
    entrypoint: ./deployer.sh
    environment:
        FRAUD_PROOF_WINDOW_SECONDS: 0
        L1_NODE_WEB3_URL: http://l1_chain:8545
        # these keys are hardhat's first 2 accounts, DO NOT use in production
        DEPLOYER_PRIVATE_KEY: "0xac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80"
        SEQUENCER_PRIVATE_KEY: "0x59c6995e998f97a5a0044966f0945389dc9e86dae88c7a8412f4603b6b78690d"
        # skip compilation when run in docker-compose, since the contracts
        # were already compiled in the builder step
        NO_COMPILE: 1
    ports:
        # expose the service to the host for getting the contract addrs
      - ${DEPLOYER_PORT:-8080}:8081

  dtl:
    depends_on:
      - l1_chain
      - deployer
      - l2geth
    image: ethereumoptimism/data-transport-layer
#    build:
#      context: ..
#      dockerfile: ./ops/docker/Dockerfile.data-transport-layer
    # override with the dtl script and the env vars required for it
    entrypoint: ./dtl.sh
    env_file:
      -  ./envs/dtl.env
    # set the rest of the env vars for the network whcih do not
    # depend on the docker-compose setup
    environment:
        # used for setting the address manager address
        URL: http://deployer:8081/addresses.json
        # connect to the 2 layers
        DATA_TRANSPORT_LAYER__L1_RPC_ENDPOINT: http://l1_chain:8545
        DATA_TRANSPORT_LAYER__L2_RPC_ENDPOINT: http://l2geth:8545
        DATA_TRANSPORT_LAYER__SYNC_FROM_L2: 'true'
        DATA_TRANSPORT_LAYER__L2_CHAIN_ID: 420
    ports:
      - ${DTL_PORT:-7878}:7878

  l2geth:
    depends_on:
      - l1_chain
      - deployer
    image: ethereumoptimism/l2geth
#    build:
#      context: ..
#      dockerfile: ./ops/docker/Dockerfile.geth
    # override with the geth script and the env vars required for it
    entrypoint: sh ./geth.sh
    env_file:
      - ./envs/geth.env
    environment:
        ETH1_HTTP: http://l1_chain:8545
        ROLLUP_TIMESTAMP_REFRESH: 5s
        ROLLUP_STATE_DUMP_PATH: http://deployer:8081/state-dump.latest.json
        # used for getting the addresses
        URL: http://deployer:8081/addresses.json
        # connecting to the DTL
        ROLLUP_CLIENT_HTTP: http://dtl:7878
        ETH1_CTC_DEPLOYMENT_HEIGHT: 8
        RETRIES: 60
    ports:
      - ${L2GETH_HTTP_PORT:-8545}:8545
      - ${L2GETH_WS_PORT:-8546}:8546

  relayer:
    depends_on:
      - l1_chain
      - deployer
      - l2geth
    image: ethereumoptimism/message-relayer
 #   build:
 #     context: ..
 #     dockerfile: ./ops/docker/Dockerfile.message-relayer
    entrypoint: ./relayer.sh
    environment:
        L1_NODE_WEB3_URL: http://l1_chain:8545
        L2_NODE_WEB3_URL: http://l2geth:8545
        URL: http://deployer:8081/addresses.json
        # a funded hardhat account
        L1_WALLET_KEY: "0xdbda1821b80551c9d65939329250298aa3472ba22feea921c0cf5d620ea67b97"
        RETRIES: 60
        POLLING_INTERVAL: 500
        GET_LOGS_INTERVAL: 500

  batch_submitter:
    depends_on:
      - l1_chain
      - deployer
      - l2geth
    image: ethereumoptimism/batch-submitter
 #   build:
 #     context: ..
 #     dockerfile: ./ops/docker/Dockerfile.batch-submitter
    entrypoint: ./batch-submitter.sh
    env_file:
      - ./envs/batch-submitter.env
    environment:
        L1_NODE_WEB3_URL: http://l1_chain:8545
        L2_NODE_WEB3_URL: http://l2geth:8545
        URL: http://deployer:8081/addresses.json
        SEQUENCER_PRIVATE_KEY: "0x59c6995e998f97a5a0044966f0945389dc9e86dae88c7a8412f4603b6b78690d"

  verifier:
    depends_on:
      - l1_chain
      - deployer
      - dtl
    image: ethereumoptimism/l2geth
    deploy:
      replicas: 0
 #   build:
 #     context: ..
 #     dockerfile: ./ops/docker/Dockerfile.geth
    entrypoint: sh ./geth.sh
    env_file:
      - ./envs/geth.env
    environment:
        ETH1_HTTP: http://l1_chain:8545
        ROLLUP_STATE_DUMP_PATH: http://deployer:8081/state-dump.latest.json
        URL: http://deployer:8081/addresses.json
        ROLLUP_CLIENT_HTTP: http://dtl:7878
        ROLLUP_BACKEND: 'l1'
        ETH1_CTC_DEPLOYMENT_HEIGHT: 8
        RETRIES: 60
        ROLLUP_VERIFIER_ENABLE: 'true'
    ports:
      - ${VERIFIER_HTTP_PORT:-8547}:8545
      - ${VERIFIER_WS_PORT:-8548}:8546

  replica:
    depends_on:
      - dtl
    image: ethereumoptimism/l2geth
    deploy:
      replicas: 0
 #   build:
 #     context: ..
 #     dockerfile: ./ops/docker/Dockerfile.geth
    entrypoint: sh ./geth.sh
    env_file:
      - ./envs/geth.env
    environment:
        ETH1_HTTP: http://l1_chain:8545
        ROLLUP_STATE_DUMP_PATH: http://deployer:8081/state-dump.latest.json
        URL: http://deployer:8081/addresses.json
        ROLLUP_CLIENT_HTTP: http://dtl:7878
        ROLLUP_BACKEND: 'l2'
        ROLLUP_VERIFIER_ENABLE: 'true'
        ETH1_CTC_DEPLOYMENT_HEIGHT: 8
        RETRIES: 60
    ports:
      - ${L2GETH_HTTP_PORT:-8549}:8545
      - ${L2GETH_WS_PORT:-8550}:8546

#  integration_tests:
#    image: ethereumoptimism/integration-tests
#    deploy:
#       replicas: 0
 #   build:
 #     context: ..
 #     dockerfile: ./ops/docker/Dockerfile.integration-tests
#    entrypoint: ./integration-tests.sh
#    environment:
#      L1_URL: http://l1_chain:8545
#      L2_URL: http://l2geth:8545
#      URL: http://deployer:8081/addresses.json
#      ENABLE_GAS_REPORT: 1
#      NO_NETWORK: 1

  gas_oracle:
    image: ethereumoptimism/gas-oracle
    deploy:
       replicas: 0
  #  build:
  #    context: ..
  #    dockerfile: ./ops/docker/Dockerfile.gas-oracle
    entrypoint: ./gas-oracle.sh
    environment:
      GAS_PRICE_ORACLE_ETHEREUM_HTTP_URL: http://l2geth:8545
      GAS_PRICE_ORACLE_PRIVATE_KEY: "0xac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80"
