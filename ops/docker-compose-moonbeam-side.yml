version: "3"

# Account #0
x-deployer_pk: &deployer_pk
  DEPLOYER_PRIVATE_KEY: '0x5fb92d6e98884f76de468fa3f6278f8807c48bebc13595d45af5bdc4da702133'

# Account #6 - bobalink test
x-bobalink_pk: &bobalink_pk
  BOBALINK_REPORTER_KEY: '0x92db14e403b83dfe3df233f83dfa3a0d7096f21ca9b0d6d6b8d88b2b4ec1564e'

# Account #19
x-gas-price-oracle_pk: &gas-price-oracle_pk
  GAS_PRICE_ORACLE_OWNER_PRIVATE_KEY: '0xdf57089febbacf7ba0bc227dafbffa9fc08a93fdc68e1e42411a14efcf23656e'


services:
  bobalink:
    depends_on:
     - l2geth
    image: bobanetwork/bobalink:latest
    build:
      context: ..
      dockerfile: ./ops/docker/Dockerfile.packages
      target: bobalink
    environment:
      L1_NODE_WEB3_URL: http://l2geth:8545
      L2_NODE_WEB3_URL: http://l2geth:8545
      ADDRESS_MANAGER_ADDRESS: "0x5FbDB2315678afecb367f032d93F642f64180aa3"
      << : *bobalink_pk
      URL: http://dtl:8081/addresses.json
      BOBA_URL: http://dtl:8081/boba-addr.json
      POLLING_INTERVAL: 1000

  # deploys account abstraction contracts and serves contract addresses
  aa_deployer:
    depends_on:
      - l1_chain
      - dtl
      - l2geth
      - boba_deployer
    image: bobanetwork/aa_deployer:latest
    build:
      context: ..
      dockerfile: ./ops/docker/Dockerfile.packages
      target: aa_deployer
    environment:
      L1_NODE_WEB3_URL: http://l1_chain:9933
      L2_NODE_WEB3_URL: http://l2geth:8545
      URL: http://dtl:8081/addresses.json
      BOBA_URL: http://dtl:8081/boba-addr.json
      # DO NOT use in production
      << : *deployer_pk
      RETRIES: 200
      DTL_REGISTRY_URL: http://dtl:8081/aa-addr.json
      # skip compilation when run in docker-compose, since the contracts
      # were already compiled in the builder step
      NO_COMPILE: 1

  proxyd:
    image: bobanetwork/proxyd:latest
    build:
      context: ../go/
      dockerfile: ./proxyd/Dockerfile
    deploy:
      replicas: 0

  bundler:
    depends_on:
      - l1_chain
      - dtl
      - l2geth
      - boba_deployer
      - aa_deployer
    image: bobanetwork/bundler:latest
    build:
      context: ..
      dockerfile: ./ops/docker/Dockerfile.packages
      target: bundler
    deploy:
      replicas: 1
    ports: [ '3000:3000' ]
    restart: on-failure
    environment:
      MIN_BALANCE: 0
      URL: http://dtl:8081/addresses.json
      AA_DEPLOYER: http://dtl:8081/aa-addr.json
      MNEMONIC_OR_PK: "0x5fb92d6e98884f76de468fa3f6278f8807c48bebc13595d45af5bdc4da702133"
      L1_NODE_WEB3_URL: http://l1_chain:9933
      L2_NODE_WEB3_URL: http://l2geth:8545
      BENEFICIARY: "0x931f3600a299fd9B24cEfB3BfF79388D19804BeA"
      MAX_BUNDLE_GAS: 5000000
      #should be set to false in prod!
      UNSAFE: 'true'
    mem_limit: 300M
    logging:
      driver: "json-file"
      options:
        max-size: 10m
        max-file: "10"

  teleportation:
    depends_on:
      - l2geth
      - teleportation_db
    image: bobanetwork/teleportation:latest
    build:
      context: ..
      dockerfile: ./ops/docker/Dockerfile.packages
      target: teleportation
    deploy:
      replicas: 0
    environment:
      # KMS setup (incl. defaults)
      TELEPORTATION_AWS_KMS_ACCESS_KEY: "${TELEPORTATION_AWS_KMS_ACCESS_KEY:-1}"
      TELEPORTATION_AWS_KMS_SECRET_KEY: "${TELEPORTATION_AWS_KMS_SECRET_KEY:-2}"
      TELEPORTATION_AWS_KMS_KEY_ID: "${TELEPORTATION_AWS_KMS_KEY_ID:-3}"
      TELEPORTATION_AWS_KMS_REGION: "${TELEPORTATION_AWS_KMS_REGION:-us-east-1}"
      TELEPORTATION_AWS_KMS_ENDPOINT: "${TELEPORTATION_AWS_KMS_ENDPOINT:-http://kms:8888/}"

  teleportation_db:
    image: postgres
    deploy:
      replicas: 1
    environment:
      POSTGRES_PASSWORD: abcdef
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"

networks:
  default:
    name: local-network
