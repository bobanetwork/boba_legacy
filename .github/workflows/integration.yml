name: integration

on:
  push:
    branches:
      - 'master'
      - 'develop'
      - '*rc'
      - 'regenesis/*'
  pull_request:
  workflow_dispatch:

jobs:

  start-runner:

    name: Start self-hosted EC2 runner
    runs-on: ubuntu-latest
    outputs:
      label: ${{ steps.start-ec2-runner.outputs.label }}
      ec2-instance-id: ${{ steps.start-ec2-runner.outputs.ec2-instance-id }}
    # These permissions are needed to interact with GitHub's OIDC Token endpoint.
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.1
        with:
          access_token: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.AWS_ROLE }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Start EC2 runner
        id: start-ec2-runner-1
        uses: machulav/ec2-github-runner@v2
        continue-on-error: true
        with:
          mode: start
          github-token: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
          ec2-image-id: ami-00b46fa1102c70ff2
          ec2-instance-type: m4.4xlarge
          subnet-id: subnet-905870ae
          security-group-id: sg-0855631d714870b32
          aws-resource-tags: |
            [{
              "Key": "Name",
              "Value": "github-actions"
            }]
      - name: Start EC2 runner retry
        if: steps.start-ec2-runner-1.outcome == 'failure'
        id: start-ec2-runner-2
        uses: machulav/ec2-github-runner@v2
        with:
          mode: start
          github-token: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
          ec2-image-id: ami-00b46fa1102c70ff2
          ec2-instance-type: m4.4xlarge
          subnet-id: subnet-905870ae
          security-group-id: sg-0855631d714870b32
          aws-resource-tags: |
            [{
              "Key": "Name",
              "Value": "github-actions"
            }]
      - name: See if any of 2 tries succeeded
        id: start-ec2-runner
        run: |
          if [ "${{ steps.start-ec2-runner-1.outcome }}" = "success" ]; then
            echo "::set-output name=label::${{ steps.start-ec2-runner-1.outputs.label }}"
            echo "::set-output name=ec2-instance-id::${{ steps.start-ec2-runner-1.outputs.ec2-instance-id }}"
          fi
          if [ "${{ steps.start-ec2-runner-2.outcome }}" = "success" ]; then
            echo "::set-output name=label::${{ steps.start-ec2-runner-2.outputs.label }}"
            echo "::set-output name=ec2-instance-id::${{ steps.start-ec2-runner-2.outputs.ec2-instance-id }}"
          fi

  start-executioner:
    name: Start self-hosted EC2 executioner
    needs: build
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      fail-fast: false
      matrix:
        include:
        - id: 1
          test-grep-filter: 'tag:rpc'
        - id: 2
          test-grep-filter: 'tag:boba'
        - id: 3
          test-grep-filter: 'tag:mrf'
        - id: 4
          test-grep-filter: 'tag:other'
    # These permissions are needed to interact with GitHub's OIDC Token endpoint.
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.AWS_ROLE }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Start EC2 executioner
        id: start-ec2-executioner-1
        uses: machulav/ec2-github-runner@v2
        continue-on-error: true
        with:
          mode: start
          github-token: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
          ec2-image-id: ami-00b46fa1102c70ff2
          ec2-instance-type: t2.2xlarge
          subnet-id: subnet-905870ae
          security-group-id: sg-0855631d714870b32
          aws-resource-tags: |
            [{
              "Key": "Name",
              "Value": "github-actions"
            }]
      - name: Start EC2 executioner
        id: start-ec2-executioner-2
        if: steps.start-ec2-executioner-1.outcome == 'failure'
        uses: machulav/ec2-github-runner@v2
        with:
          mode: start
          github-token: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
          ec2-image-id: ami-00b46fa1102c70ff2
          ec2-instance-type: t2.2xlarge
          subnet-id: subnet-905870ae
          security-group-id: sg-0855631d714870b32
          aws-resource-tags: |
            [{
              "Key": "Name",
              "Value": "github-actions"
            }]
      - name: See if any of 2 tries succeeded
        id: start-ec2-executioner
        run: |
          if [ "${{ steps.start-ec2-executioner-1.outcome }}" = "success" ]; then
            echo "::set-output name=label::${{ steps.start-ec2-executioner-1.outputs.label }}"
            echo "::set-output name=ec2-instance-id::${{ steps.start-ec2-executioner-1.outputs.ec2-instance-id }}"
          fi
          if [ "${{ steps.start-ec2-executioner-2.outcome }}" = "success" ]; then
            echo "::set-output name=label::${{ steps.start-ec2-executioner-2.outputs.label }}"
            echo "::set-output name=ec2-instance-id::${{ steps.start-ec2-executioner-2.outputs.ec2-instance-id }}"
          fi
      - name: Output the runner meta
        run: |
          mkdir /tmp/runner/
          mkdir /tmp/runner/${{ matrix.id }}
          echo '${{ matrix.test-grep-filter }}' > /tmp/runner/${{ matrix.id }}/filter
          echo ${{ steps.start-ec2-executioner.outputs.label }} > //tmp/runner/${{ matrix.id }}/label
          echo ${{ steps.start-ec2-executioner.outputs.ec2-instance-id }} > /tmp/runner/${{ matrix.id }}/instance
      - uses: actions/upload-artifact@v2
        with:
          name: runner_info
          path: /tmp/runner/*

  build:
    needs: start-runner
    runs-on: ${{ needs.start-runner.outputs.label }}
    # services:
    #   registry:
    #     image: registry:2
    #     ports:
    #       - 5000:5000
    env:
        DOCKER_BUILDKIT: 1
        COMPOSE_DOCKER_CLI_BUILD: 1
    steps:
      #https://github.com/actions/checkout/issues/590
      - run: git checkout -f $(git -c user.name=x -c user.email=x@x commit-tree $(git hash-object -t tree /dev/null) < /dev/null) || true
      - uses: actions/checkout@v3

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Build the services
        working-directory: ./ops
        run: |
          ./scripts/stats.sh &
          ./scripts/build-ci.sh

      - name: List the images
        working-directory: ./ops
        run: docker images

      - name: Export and upload artifact images
        run: |
          mkdir /tmp/bobanetwork
          for i in $(docker images --format "{{.Repository}}:{{.Tag}}" | grep bobanetwork); do
            docker save -o /tmp/$(echo "$i" | sed s/:/_/g).tar "$i" &
          done
          wait < <(jobs -p)

      - uses: actions/upload-artifact@v2
        with:
          name: boba_images
          path: /tmp/bobanetwork/*.tar

  integration:
    needs:
      - build
      - start-executioner
    runs-on: [self-hosted]
    env:
      DOCKER_CLIENT_TIMEOUT: 120
      COMPOSE_HTTP_TIMEOUT: 120
    #services:
      # registry:
      #   image: registry:2
      #   ports:
      #     - 5000:5000
    strategy:
      max-parallel: 4
      fail-fast: false
      matrix:
        include:
        - id: 1
          test-grep-filter: 'tag:rpc'
        - id: 2
          test-grep-filter: 'tag:boba'
        - id: 3
          test-grep-filter: 'tag:mrf'
        - id: 4
          test-grep-filter: 'tag:other'
    steps:
      - uses: actions/download-artifact@v2
        continue-on-error: true
        id: download
        with:
          name: boba_images
          path: /tmp/bobanetwork/
      #resolving transient error:
      #An error occurred while attempting to decompress the response stream
      - name: retry artifact download on failure
        id: download_2
        if: steps.download.outcome=='failure'
        uses: actions/download-artifact@v2
        with:
          name: boba_images
          path: /tmp/bobanetwork/

      - name: Display structure of downloaded files
        run: ls -R
        working-directory: /tmp/bobanetwork/

      - name: Load artifacts into docker
        run: |
          for f in ${{steps.download.outputs.download-path}}/*.tar; do
            docker load -i $f &
          done
          wait < <(jobs -p)

      #https://github.com/actions/checkout/issues/590
      - run: git checkout -f $(git -c user.name=x -c user.email=x@x commit-tree $(git hash-object -t tree /dev/null) < /dev/null) || true
      - uses: actions/checkout@v3

      - name: Bring the stack up
        working-directory: ./ops
        run: BUILD=2 DAEMON=1 ./up_local.sh

      - name: Wait for the Sequencer node
        working-directory: ./ops
        run: ./scripts/wait-for-sequencer.sh

      - name: Start background logging
        working-directory: ./ops
        run: docker-compose -f docker-compose.yml logs --follow kms batch_submitter &

      - name: Run the integration tests
        working-directory: ./ops
        run: docker-compose run -e TEST_GREP_FILTER="${{ matrix.test-grep-filter }}" integration_tests

  stop-runner:
    name: Stop self-hosted EC2 runner
    needs:
      - start-runner # required to get output from the start-runner job
      - build # required to wait when the main job is done
    runs-on: ubuntu-latest
    if: ${{ always() }} # required to stop the runner even if the error happened in the previous jobs
    # These permissions are needed to interact with GitHub's OIDC Token endpoint.
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.AWS_ROLE }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Stop EC2 runner
        uses: machulav/ec2-github-runner@v2
        continue-on-error: true
        id: stop-ec2-runner
        with:
          mode: stop
          github-token: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
          label: ${{ needs.start-runner.outputs.label }}
          ec2-instance-id: ${{ needs.start-runner.outputs.ec2-instance-id }}
      - name: Sleep for 5 seconds
        if: steps.stop-ec2-runner.outcome == 'failure'
        run: sleep 5s
        shell: bash
      - name: Stop EC2 runner
        if: steps.stop-ec2-runner.outcome == 'failure'
        uses: machulav/ec2-github-runner@v2
        with:
          mode: stop
          github-token: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
          label: ${{ needs.start-runner.outputs.label }}
          ec2-instance-id: ${{ needs.start-runner.outputs.ec2-instance-id }}


  stop-executioner:
    name: Stop self-hosted EC2 runner
    needs:
      - integration # required to wait when the main job is done
    runs-on: ubuntu-latest
    if: ${{ always() }} # required to stop the runner even if the error happened in the previous jobs
    strategy:
      max-parallel: 4
      fail-fast: false
      matrix:
        include:
        - id: 1
        - id: 2
        - id: 3
        - id: 4
    # These permissions are needed to interact with GitHub's OIDC Token endpoint.
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: runner_info
          path: /tmp/runner/

      - name: Set runner info
        id: runner_info
        working-directory: /tmp/runner/
        run: |
          ls -altr
          cd ${{ matrix.id }}
          cat filter
          echo "::set-output name=label::"$(cat label)
          echo "::set-output name=ec2-instance-id::"$(cat instance)

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.AWS_ROLE }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Stop EC2 executioner
        uses: machulav/ec2-github-runner@v2
        continue-on-error: true
        id: stop-ec2-executioner
        with:
          mode: stop
          github-token: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
          label: ${{ steps.runner_info.outputs.label }}
          ec2-instance-id: ${{ steps.runner_info.outputs.ec2-instance-id }}
      - name: Sleep for 10 seconds
        if: steps.stop-ec2-executioner.outcome == 'failure'
        run: sleep 10s
        shell: bash
      - name: Stop EC2 executioner
        if: steps.stop-ec2-executioner.outcome == 'failure'
        uses: machulav/ec2-github-runner@v2
        with:
          mode: stop
          github-token: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
          label: ${{ steps.runner_info.outputs.label }}
          ec2-instance-id: ${{ steps.runner_info.outputs.ec2-instance-id }}
