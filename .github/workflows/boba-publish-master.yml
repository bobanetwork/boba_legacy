name: Publish Packages (boba-master)

on:
  push:
    tags:
    - '*'

jobs:
  build-publish-win:
    runs-on: ubuntu-latest
    # These permissions are needed to interact with GitHub's OIDC Token endpoint.
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_ACCESS_TOKEN_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN_SECRET }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.AWS_ROLE }}
          aws-region: ${{ secrets.AWS_REGION }}

      - uses: actions/checkout@v2

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Get the version
        id: tag
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}

      - name: Print current tag
        run: echo ${{ steps.tag.outputs.VERSION }}

      - name: Build the services
        working-directory: ./ops
        run: |
          ./scripts/build-ci.sh
          docker-compose -f docker-compose.yml -f docker-compose-side.yml build --parallel -- monitor gas_oracle
      - name: Rename and retag the Optimism images
        working-directory: ./ops
        run: |
          for i in $(docker images --format "{{.Repository}}:{{.Tag}}" | grep bobanetwork); do
            docker image tag "$i" bobanetwork/$(echo $i | awk -F'/' '{print $2}' | awk -F':' '{print $1}'):${{ steps.tag.outputs.VERSION }}
            docker image tag "$i" bobanetwork/$(echo $i | awk -F'/' '{print $2}' | awk -F':' '{print $1}'):release
          done
          docker images
          docker images | grep ${{ steps.tag.outputs.VERSION }}

      - name: Rename and retag the optimism images
        working-directory: ./ops
        run: |
          for i in $(docker images --format "{{.Repository}}:{{.Tag}}" | grep bobanetwork); do
            echo "$1"
            docker push "$i"
          done

      # - name: Build and push docker images to AWS
      #   working-directory: ./ops_boba
      #   run: |
      #        rm -rf cloudformation/deployer-rinkeby.yaml cloudformation/dummy-transaction.yaml cloudformation/omgx-monitor.yaml cloudformation/blockexplorer-blockscout.yaml cloudformation/transaction-monitor.yaml
      #        ./cfn-devenv.sh push2aws --from-tag ${{ steps.tag.outputs.VERSION }} --deploy-tag ${{ steps.tag.outputs.VERSION }}
