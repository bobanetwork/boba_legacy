#adapted from https://raw.githubusercontent.com/ethereum-optimism/optimism/develop/.circleci/config.yml
version: 2.1

jobs:
  integration-tests-moonbeam:
    machine:
      image: ubuntu-2004:202111-02
      docker_layer_caching: true
    environment:
      DOCKER_BUILDKIT: 1
    parallelism: 4
    steps:
      - checkout
      - run:
          name: Bring up the stack
          command: |
            ./scripts/build-ci-moonbeam.sh
            BUILD=2 DAEMON=1 ./up_local_moonbeam.sh
          working_directory: ops
      - run:
          name: Start background logging
          working_directory: ops
          background: true
          command: docker-compose -f docker-compose-moonbeam.yml logs --follow
      - run:
          name: Wait for sequencer
          command: bash scripts/wait-for-sequencer.sh docker-compose-moonbeam.yml
          working_directory: ops
      - run:
          name: Split tests
          command: circleci tests glob "../integration-tests/test/*.spec.ts" | circleci tests split --split-by=timings --time-default=10s | tee splits.txt
          working_directory: ops
      - run:
          name: Run integration tests
          command: docker-compose -f docker-compose-moonbeam.yml run integration_tests $(cat splits.txt)
          working_directory: ops
      - run:
          name: Rewrite test name for next run
          command: |
            mkdir -p result
            cat /home/circleci/result/output.xml | sed 's/\/opt\/optimism/../g' | tee result/result.xml
          working_directory: ops
      - store_test_results:
          path: /home/circleci/project/ops/result
      - store_artifacts:
          path: /home/circleci/project/ops/result

  integration-tests-fantom:
     machine:
       image: ubuntu-2004:202111-02
       docker_layer_caching: true
     environment:
       DOCKER_BUILDKIT: 1
     parallelism: 4
     steps:
       - checkout
       - run:
           name: Bring up the stack
           command: |
             ./scripts/build-ci-fantom.sh
             BUILD=2 DAEMON=1 ./up_local_fantom.sh
           working_directory: ops
       - run:
           name: Start background logging
           working_directory: ops
           background: true
           command: docker-compose -f docker-compose-fantom.yml logs --follow
       - run:
           name: Wait for sequencer
           command: bash scripts/wait-for-sequencer.sh docker-compose-fantom.yml
           working_directory: ops
       - run:
          name: Split tests
          command: circleci tests glob "../integration-tests/test/*.spec.ts" | circleci tests split --split-by=timings --time-default=10s | tee splits.txt
          working_directory: ops
       - run:
          name: Run integration tests
          command: docker-compose -f docker-compose-fantom.yml run integration_tests $(cat splits.txt)
          working_directory: ops
       - run:
          name: Rewrite test name for next run
          command: |
            mkdir -p result
            cat /home/circleci/result/output.xml | sed 's/\/opt\/optimism/../g' | tee result/result.xml
          working_directory: ops
       - store_test_results:
          path: /home/circleci/project/ops/result
       - store_artifacts:
          path: /home/circleci/project/ops/result

  integration-tests-avalanche:
      machine:
        image: ubuntu-2004:202111-02
        docker_layer_caching: true
      environment:
        DOCKER_BUILDKIT: 1
      parallelism: 4
      steps:
        - checkout
        - run:
            name: Bring up the stack
            command: |
              ./scripts/build-ci-avalanche.sh
              BUILD=2 DAEMON=1 NETWORK_PRUNE=1 ./up_local_avalanche.sh
            working_directory: ops
        - run:
            name: Start background logging
            working_directory: ops
            background: true
            command: docker-compose -f docker-compose-avalanche.yml logs --follow
        - run:
            name: Wait for sequencer
            command: bash scripts/wait-for-sequencer.sh docker-compose-avalanche.yml
            working_directory: ops
        - run:
            name: Split tests
            command: circleci tests glob "../integration-tests/test/*.spec.ts" | circleci tests split --split-by=timings --time-default=10s | tee splits.txt
            working_directory: ops
        - run:
            name: Run integration tests
            command: docker-compose -f docker-compose-avalanche.yml run integration_tests $(cat splits.txt)
            working_directory: ops
        - run:
            name: Rewrite test name for next run
            command: |
              mkdir -p result
              cat /home/circleci/result/output.xml | sed 's/\/opt\/optimism/../g' | tee result/result.xml
            working_directory: ops
        - store_test_results:
            path: /home/circleci/project/ops/result
        - store_artifacts:
            path: /home/circleci/project/ops/result

  integration-tests-bsc:
      machine:
        image: ubuntu-2004:202111-02
        docker_layer_caching: true
      environment:
        DOCKER_BUILDKIT: 1
      parallelism: 4
      steps:
        - checkout
        - run:
            name: Bring up the stack
            command: |
              ./scripts/build-ci-bsc.sh
              BUILD=2 DAEMON=1 NETWORK_PRUNE=1 ./up_local_bsc.sh
            working_directory: ops
        - run:
            name: Start background logging
            working_directory: ops
            background: true
            command: docker-compose -f docker-compose-bsc.yml logs --follow
        - run:
            name: Wait for sequencer
            command: bash scripts/wait-for-sequencer.sh docker-compose-bsc.yml
            working_directory: ops
        - run:
            name: Split tests
            command: circleci tests glob "../integration-tests/test/*.spec.ts" | circleci tests split --split-by=timings --time-default=10s | tee splits.txt
            working_directory: ops
        - run:
            name: Run integration tests
            command: docker-compose -f docker-compose-bsc.yml run integration_tests $(cat splits.txt)
            working_directory: ops
        - run:
            name: Rewrite test name for next run
            command: |
              mkdir -p result
              cat /home/circleci/result/output.xml | sed 's/\/opt\/optimism/../g' | tee result/result.xml
            working_directory: ops
        - store_test_results:
            path: /home/circleci/project/ops/result
        - store_artifacts:
            path: /home/circleci/project/ops/result

workflows:
  main:
    jobs:
      - integration-tests-moonbeam
      - integration-tests-fantom
      - integration-tests-avalanche
      - integration-tests-bsc
